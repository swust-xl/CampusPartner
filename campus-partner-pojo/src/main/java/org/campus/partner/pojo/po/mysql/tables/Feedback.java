/*
 * This file is generated by jOOQ.
*/
package org.campus.partner.pojo.po.mysql.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.campus.partner.pojo.po.mysql.CampusPartner;
import org.campus.partner.pojo.po.mysql.Keys;
import org.campus.partner.pojo.po.mysql.tables.records.FeedbackRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Feedback extends TableImpl<FeedbackRecord> {

    private static final long serialVersionUID = 1121795965;

    /**
     * The reference instance of <code>campus_partner.feedback</code>
     */
    public static final Feedback FEEDBACK = new Feedback();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FeedbackRecord> getRecordType() {
        return FeedbackRecord.class;
    }

    /**
     * The column <code>campus_partner.feedback.id</code>. 自增主键id
     */
    public final TableField<FeedbackRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "自增主键id");

    /**
     * The column <code>campus_partner.feedback.object_id</code>. 全局唯一id
     */
    public final TableField<FeedbackRecord, byte[]> OBJECT_ID = createField("object_id", org.jooq.impl.SQLDataType.VARBINARY.length(255).nullable(false), this, "全局唯一id");

    /**
     * The column <code>campus_partner.feedback.user_id</code>. 反馈信息的用户 ID
     */
    public final TableField<FeedbackRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "反馈信息的用户 ID");

    /**
     * The column <code>campus_partner.feedback.content</code>. 反馈内容
     */
    public final TableField<FeedbackRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR.length(5120).nullable(false), this, "反馈内容");

    /**
     * The column <code>campus_partner.feedback.created_datetime</code>.
     */
    public final TableField<FeedbackRecord, Date> CREATED_DATETIME = createField("created_datetime", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>campus_partner.feedback.modified_datetime</code>.
     */
    public final TableField<FeedbackRecord, Date> MODIFIED_DATETIME = createField("modified_datetime", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * Create a <code>campus_partner.feedback</code> table reference
     */
    public Feedback() {
        this("feedback", null);
    }

    /**
     * Create an aliased <code>campus_partner.feedback</code> table reference
     */
    public Feedback(String alias) {
        this(alias, FEEDBACK);
    }

    private Feedback(String alias, Table<FeedbackRecord> aliased) {
        this(alias, aliased, null);
    }

    private Feedback(String alias, Table<FeedbackRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CampusPartner.CAMPUS_PARTNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FeedbackRecord, Long> getIdentity() {
        return Keys.IDENTITY_FEEDBACK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FeedbackRecord> getPrimaryKey() {
        return Keys.KEY_FEEDBACK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FeedbackRecord>> getKeys() {
        return Arrays.<UniqueKey<FeedbackRecord>>asList(Keys.KEY_FEEDBACK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Feedback as(String alias) {
        return new Feedback(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Feedback rename(String name) {
        return new Feedback(name, null);
    }
}
