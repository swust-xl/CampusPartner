/*
 * This file is generated by jOOQ.
*/
package org.campus.partner.pojo.po.mysql.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.campus.partner.pojo.po.mysql.tables.Feedback;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeedbackRecord extends UpdatableRecordImpl<FeedbackRecord> implements Record6<Long, byte[], String, String, Date, Date> {

    private static final long serialVersionUID = 648730344;

    /**
     * Setter for <code>campus_partner.feedback.id</code>. 自增主键id
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>campus_partner.feedback.id</code>. 自增主键id
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>campus_partner.feedback.object_id</code>. 全局唯一id
     */
    public void setObjectId(byte... value) {
        set(1, value);
    }

    /**
     * Getter for <code>campus_partner.feedback.object_id</code>. 全局唯一id
     */
    public byte[] getObjectId() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>campus_partner.feedback.user_id</code>. 反馈信息的用户 ID
     */
    public void setUserId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>campus_partner.feedback.user_id</code>. 反馈信息的用户 ID
     */
    public String getUserId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>campus_partner.feedback.content</code>. 反馈内容
     */
    public void setContent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>campus_partner.feedback.content</code>. 反馈内容
     */
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>campus_partner.feedback.created_datetime</code>.
     */
    public void setCreatedDatetime(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>campus_partner.feedback.created_datetime</code>.
     */
    public Date getCreatedDatetime() {
        return (Date) get(4);
    }

    /**
     * Setter for <code>campus_partner.feedback.modified_datetime</code>.
     */
    public void setModifiedDatetime(Date value) {
        set(5, value);
    }

    /**
     * Getter for <code>campus_partner.feedback.modified_datetime</code>.
     */
    public Date getModifiedDatetime() {
        return (Date) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, byte[], String, String, Date, Date> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, byte[], String, String, Date, Date> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Feedback.FEEDBACK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field2() {
        return Feedback.FEEDBACK.OBJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Feedback.FEEDBACK.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Feedback.FEEDBACK.CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field5() {
        return Feedback.FEEDBACK.CREATED_DATETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field6() {
        return Feedback.FEEDBACK.MODIFIED_DATETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value2() {
        return getObjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value5() {
        return getCreatedDatetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value6() {
        return getModifiedDatetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value2(byte... value) {
        setObjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value3(String value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value4(String value) {
        setContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value5(Date value) {
        setCreatedDatetime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord value6(Date value) {
        setModifiedDatetime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedbackRecord values(Long value1, byte[] value2, String value3, String value4, Date value5, Date value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedbackRecord
     */
    public FeedbackRecord() {
        super(Feedback.FEEDBACK);
    }

    /**
     * Create a detached, initialised FeedbackRecord
     */
    public FeedbackRecord(Long id, byte[] objectId, String userId, String content, Date createdDatetime, Date modifiedDatetime) {
        super(Feedback.FEEDBACK);

        set(0, id);
        set(1, objectId);
        set(2, userId);
        set(3, content);
        set(4, createdDatetime);
        set(5, modifiedDatetime);
    }
}
