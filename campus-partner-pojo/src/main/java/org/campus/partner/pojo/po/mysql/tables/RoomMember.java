/*
 * This file is generated by jOOQ.
*/
package org.campus.partner.pojo.po.mysql.tables;


import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.campus.partner.pojo.po.mysql.CampusPartner;
import org.campus.partner.pojo.po.mysql.Keys;
import org.campus.partner.pojo.po.mysql.tables.records.RoomMemberRecord;
import org.campus.partner.util.converter.DateConverter;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoomMember extends TableImpl<RoomMemberRecord> {

    private static final long serialVersionUID = -540915296;

    /**
     * The reference instance of <code>campus_partner.room_member</code>
     */
    public static final RoomMember ROOM_MEMBER = new RoomMember();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoomMemberRecord> getRecordType() {
        return RoomMemberRecord.class;
    }

    /**
     * The column <code>campus_partner.room_member.id</code>.
     */
    public final TableField<RoomMemberRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>campus_partner.room_member.object_id</code>.
     */
    public final TableField<RoomMemberRecord, byte[]> OBJECT_ID = createField("object_id", org.jooq.impl.SQLDataType.VARBINARY.length(255).nullable(false), this, "");

    /**
     * The column <code>campus_partner.room_member.user_id</code>.
     */
    public final TableField<RoomMemberRecord, byte[]> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARBINARY.length(255).nullable(false), this, "");

    /**
     * The column <code>campus_partner.room_member.room_id</code>.
     */
    public final TableField<RoomMemberRecord, byte[]> ROOM_ID = createField("room_id", org.jooq.impl.SQLDataType.VARBINARY.length(255).nullable(false), this, "");

    /**
     * The column <code>campus_partner.room_member.createdDatetime</code>.
     */
    public final TableField<RoomMemberRecord, Date> CREATEDDATETIME = createField("createdDatetime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>campus_partner.room_member.modifiedDatetime</code>.
     */
    public final TableField<RoomMemberRecord, Date> MODIFIEDDATETIME = createField("modifiedDatetime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * Create a <code>campus_partner.room_member</code> table reference
     */
    public RoomMember() {
        this("room_member", null);
    }

    /**
     * Create an aliased <code>campus_partner.room_member</code> table reference
     */
    public RoomMember(String alias) {
        this(alias, ROOM_MEMBER);
    }

    private RoomMember(String alias, Table<RoomMemberRecord> aliased) {
        this(alias, aliased, null);
    }

    private RoomMember(String alias, Table<RoomMemberRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CampusPartner.CAMPUS_PARTNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RoomMemberRecord, Long> getIdentity() {
        return Keys.IDENTITY_ROOM_MEMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoomMemberRecord> getPrimaryKey() {
        return Keys.KEY_ROOM_MEMBER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoomMemberRecord>> getKeys() {
        return Arrays.<UniqueKey<RoomMemberRecord>>asList(Keys.KEY_ROOM_MEMBER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoomMember as(String alias) {
        return new RoomMember(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RoomMember rename(String name) {
        return new RoomMember(name, null);
    }
}
